Assignment 4 readme File

------------------------------------------------------------------------
Student 1: What is your name?

James Swinehart

------------------------------------------------------------------------
Student 2: What is your name?

Benny Wertheimer

------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.
The course's precepts.
The course's website.
Documents that are referenced directly by the course's website. 
Such documents include the course's lecture slides and precept handouts.
The course's current staff members outside of class time through Ed.
Current Intro Lab TAs through visits to the Intro COS Lab:
Isaac, Edin, Keith Sammy, Michael

------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.
The course's precepts.
The course's website.
Documents that are referenced directly by the course's website. 
Such documents include the course's lecture slides and precept handouts.
The course's current staff members outside of class time through Ed.
Current Intro Lab TAs through visits to the Intro COS Lab:
Isaac, Edin, Keith Sammy, Michael

------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 1: In fulfillment of the requirement from section 2.4.3 of the
Academic Regulations in Princeton's Rights, Rules, Responsibilities
guide, enter your name in the space below the following affirmation:

This paper represents my own work in accordance with University
regulations.

James Swinehart

------------------------------------------------------------------------
Student 2: In fulfillment of the requirement from section 2.4.3 of the
Academic Regulations in Princeton's Rights, Rules, Responsibilities
guide, enter your name in the space below the following affirmation:

This paper represents my own work in accordance with University
regulations.

Benny Wertheimer

------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?

No and no.

------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?

I mean I get why you want to make an assignment like this. It's
important to be able to read and understand and edit code that 
wasn't written by you. It's more applicable to coding in the real world
its just that...

its really not fun to do.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?

No bugs that we know of.

------------------------------------------------------------------------
What warnings does splint generate for Part 2's checker, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

None.

------------------------------------------------------------------------
What warnings does critTer generate on checkerDT.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

checkerDT.c: line 83: low priority: 
This area is deeply nested at level 4, consider refactoring

Yes the area is deeply nested, but this is much more readable than the
alternative of having multiple different loops to handle the different
index sizes possible.

checkerDT.c: line 90: low priority: 
This area is deeply nested at level 4, consider refactoring

Yes the area is deeply nested, but this is much more readable than the
alternative of having multiple different loops to handle the different
index sizes possible.

------------------------------------------------------------------------
What warnings does splint generate on your Part 3 code, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

ft.c:94:42: Variable ulChildID used before definition
An rvalue is used that may not be initialized to a value on some 
execution path. (Use -usedef to inhibit warning)
ulChildID is only used if Node_hasChild works, so it will never be used
without being initialized

------------------------------------------------------------------------
What warnings does critTer generate on your Part 3 code, and what are
your disagreements with them? Copy the critTer warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

ft.c: line 674: low priority: 
A file should contain no more than 15 functions;
this file contains 17 functions
ft.c uses the same amount of functions that were required in ft.h

ft.c: line 309: medium priority:
Do you want to validate 'pvContents' through an assert?
No, pvContents can be NULL.

ft.c: line 504: medium priority:
Do you want to validate 'pvNewContents' through an assert?
No, pvContents can be NULL.

ft.c: line 673: low priority: 
A source code file should contain fewer than 500 lines;
this file contains 674 lines
Sorry, this was a long assignment! Thus, there is a lot of code.

------------------------------------------------------------------------
For each of the five faulty BDT implementations required by Step
1.5, identify the function where there is a bug. You do not have to
identify the bug itself, only its location, but note that this must be
the location of the underlying error, which is not necessarily where
the error manifests itself or is "noticed" by the client.


      Executable         Function with the underlying error
===============================================================
         ./bdtBad1       BDT_insert  
---------------------------------------------------------------
         ./bdtBad2       BDT_freeSubtree 
---------------------------------------------------------------
         ./bdtBad3       BDT_addChild
---------------------------------------------------------------
         ./bdtBad4       BDT_strlenAccumulate
---------------------------------------------------------------
         ./bdtBad5       BDT_findNode
===============================================================


------------------------------------------------------------------------
What are your critiques of the given DT implementations, as
specified in Step 2.5?


NodeDtGood.c
- Node_new module bloat
      - Has way too many invariants called.
      - it should have a static function that calls invariants. 
Path, Dynarray
- Funtion names + Static function length 
      Path
      - The names are unclear about what they do. And helper 
      functions should have names that make them clear they are
      helper functions. For example Path_split does not clearly
      say what exactly it is splitting, or into what.
      - Some functions are too long and need more static helpers.
      Such as Path_split aswell. Especially as a helper function this
      code should not be taking up this much space with 
      invariants.
The same themese occur in DynArray
      - **DynArray_bsearchHelp does not say what it actually does
            however it does clarify that it is a helper function which 
            is good. However it's only difference from another function
            within DynArray's API is that it says "help"
       - Dynarray.c actually has pretty good modularity, and
            is not too bloated.


Parameter Ordering
      int Path_dup(Path_T oPPath, Path_T *poPResult);
      - This should maybe use the system that is generally used such 
as in strcpy where the dst memory is first, and the memory copying
is second. This is a theme with other functions such as Path_New.



dt.h
	•	Some files don’t have the best names, such as Dt_destroy. 
      It is not exactly clear whether this function uninitializes the 
            tree or not. 
dtGood.c
	•	There are a lot of auxiliary functions just for toString. 
      Ideally, the to-string format would be more easily sorted. For 
      example, three functions traverse the path of the tree: findNode, 
      preOrderTraversal, and TraversePath. Ideally, you would not have 
      to have three different functions that perform mostly similar 
      things.
	•	Parameter Ordering. Generally, the destination parameter 
      should be first as it is in the String module (strcpy, strcat). 
      However, this is not true for many functions in dtGood.c. For 
      example, in DT_traversePath, poNFurthest is given the value, and 
      it is the last parameter, same with DT_findNode, 
      DT_strlenAccumulate, and DT_strcatAccumulate
	•	Module bloat. There should be static functions written for 
      invariants. It would make the code significantly more readable in 
      functions like :DT_insert.
nodeDT.h
	•	Parameter ordering. Similar to above, the dst parameter is 
      not first in functions like Node_new, Node_hasChild, and 
      Node_getChild
nodeDTGood.c
	•	This is not necessarily fixable, but I think it should maybe 
      be clearer for readability and future programmers' sake that the 
      “add_Child” function is the place where the node is put into the 
            Dynarry. Coming from us, after we finished part 3, that one 
            was more difficult to trace back to.
	•	Module bloat. There should be static functions written for 
      invariants. It would make the code significantly more readable in 
      functions like Node_new.
A4def.h
	•	

Dynarry, Path
	•	Mostly just naming issues. Names like Path_split, 
      path_prefix could be clearer. That's being finicky though. 


------------------------------------------------------------------------